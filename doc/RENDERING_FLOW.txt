Primitive Rendering Overview: Render a Sprite on Screen
========================================================

Use Case: Render a sprite with effects and output to terminal


┌─────────────────────────────────────────────────────────────────────────────┐
│                           SPRITE STRUCTURE                                  │
│  ┌────────────────────────────────────────────────────────────────────┐     │
│  │  Sprite                                                            │     │
│  │  ┌──────────────────────────────────────────────────────────────┐  │     │
│  │  │ SpriteFrameSet                                               │  │     │
│  │  │  ┌────────────────┐  ┌────────────────┐  ┌────────────────┐  │  │     │
│  │  │  │ SpriteFrame[0] │  │ SpriteFrame[1] │  │ SpriteFrame[n] │  │  │     │
│  │  │  │ ┌────────────┐ │  │ ┌────────────┐ │  │ ┌────────────┐ │  │  │     │
│  │  │  │ │data_surface│ │  │ │data_surface│ │  │ │data_surface│ │  │  │     │
│  │  │  │ │(original)  │ │  │ │(original)  │ │  │ │(original)  │ │  │  │     │
│  │  │  │ └────────────┘ │  │ └────────────┘ │  │ └────────────┘ │  │  │     │
│  │  │  │       │        │  │       │        │  │       │        │  │  │     │
│  │  │  │       ▼        │  │       ▼        │  │       ▼        │  │  │     │
│  │  │  │ ┌────────────┐ │  │ ┌────────────┐ │  │ ┌────────────┐ │  │  │     │
│  │  │  │ │output_     │ │  │ │output_     │ │  │ │output_     │ │  │  │     │
│  │  │  │ │ surface    │ │  │ │ surface    │ │  │ │ surface    │ │  │  │     │
│  │  │  │ └────────────┘ │  │ └────────────┘ │  │ └────────────┘ │  │  │     │
│  │  │  └────────────────┘  └────────────────┘  └────────────────┘  │  │     │
│  │  │       current_frame_index ──────────────────┘                │  │     │
│  │  └──────────────────────────────────────────────────────────────┘  │     │
│  └────────────────────────────────────────────────────────────────────┘     │
└──────────────────────────────────┬──────────────────────────────────────────┘
                                   │ Select current frame's output_surface
                                   ▼
        ┌──────────────────────────────────────────────────────────┐
        │         RenderSurface (from current frame)               │
        │  ┌────────────────────────────────────────────────────┐  │
        │  │ • color_map: []Rgb    (pixel colors)               │  │
        │  │ • shadow_map: []u8    (opacity: 0=transparent)     │  │
        │  │ • char_map: []u21     (text overlay)               │  │
        │  │ • x, y, z: position and z-order                    │  │
        │  └────────────────────────────────────────────────────┘  │
        └──────────────────┬───────────────────────────────────────┘
                           │ Used as input
                           ▼
        ┌──────────────────────────────────────────────────────────┐
        │              RENDER OBJECT                               │
        │  ┌────────────────────────────────────────────────────┐  │
        │  │ RenderEffectContext                                │  │
        │  │  ┌──────────────┐          ┌──────────────┐        │  │
        │  │  │input_surface │   ────>  │output_surface│        │  │
        │  │  │(sprite frame)│          │(transformed) │        │  │
        │  │  └──────────────┘          └──────────────┘        │  │
        │  │         │                         ▲                │  │
        │  │         │                         │                │  │
        │  │         └─────────────┬───────────┘                │  │
        │  │                       │                            │  │
        │  │         ┌─────────────▼───────────────┐            │  │
        │  │         │ RenderEffectChain (optional)│            │  │
        │  │         │  ┌─────────────────────────┐│            │  │
        │  │         │  │ Effect 1: Fade          ││            │  │
        │  │         │  │   input ──> output      ││            │  │
        │  │         │  └────────┬────────────────┘│            │  │
        │  │         │           │                 │            │  │
        │  │         │  ┌────────▼────────────────┐│            │  │
        │  │         │  │ Effect 2: Blur          ││            │  │
        │  │         │  │   input ──> output      ││            │  │
        │  │         │  └────────┬────────────────┘│            │  │
        │  │         │           │                 │            │  │
        │  │         │  ┌────────▼────────────────┐│            │  │
        │  │         │  │ Effect 3: Brighter      ││            │  │
        │  │         │  │   input ──> output      ││            │  │
        │  │         │  └─────────────────────────┘│            │  │
        │  │         └─────────────────────────────┘            │  │
        │  │                                                    │  │
        │  └────────────────────────────────────────────────────┘  │
        └──────────────────┬───────────────────────────────────────┘
                           │ .process() produces transformed output
                           ▼
        ┌──────────────────────────────────────────────────────────┐
        │              RENDER PIPELINE                             │
        │  ┌────────────────────────────────────────────────────┐  │
        │  │ render_objects: [RenderObject, RenderObject, ...]  │  │
        │  │                                                    │  │
        │  │ 1. Process each RenderObject:                      │  │
        │  │    • Run effect chain on input_surface             │  │
        │  │    • Produce output_surface                        │  │
        │  │                                                    │  │
        │  │ 2. Collect all output surfaces                     │  │
        │  │    ┌──────────┐  ┌──────────┐  ┌──────────┐        │  │
        │  │    │ surface1 │  │ surface2 │  │ surfaceN │        │  │
        │  │    └──────────┘  └──────────┘  └──────────┘        │  │
        │  │         │              │              │            │  │
        │  │         └──────────────┼──────────────┘            │  │
        │  │                        ▼                           │  │
        │  │            ┌───────────────────────┐               │  │
        │  │            │   RenderEngine.merge  │               │  │
        │  │            │ • Apply z-ordering    │               │  │
        │  │            │ • Blend pixels        │               │  │
        │  │            │ • Handle transparency │               │  │
        │  │            └───────────┬───────────┘               │  │
        │  │                        ▼                           │  │
        │  │                 result_surface                     │  │
        │  │                        │                           │  │
        │  │ 3. Optional final effect chain:                    │  │
        │  │    result ──> [post-process] ──> output_surface    │  │
        │  │                                                    │  │
        │  └────────────────────────────────────────────────────┘  │
        └──────────────────┬───────────────────────────────────────┘
                           │ Rendered to output_surface
                           ▼
        ┌──────────────────────────────────────────────────────────┐
        │                       SCREEN                             │
        │  ┌────────────────────────────────────────────────────┐  │
        │  │ output_surface ← (from pipeline or manual render)  │  │
        │  │                                                    │  │
        │  │ Manual mode:                                       │  │
        │  │   screen.addSprite(sprite)                         │  │
        │  │   screen.addRenderSurface(surface)                 │  │
        │  │   screen.render() ── uses RenderEngine.merge ──┐   │  │
        │  │                                                │   │  │
        │  │ Pipeline mode:                                 │   │  │
        │  │   pipeline.run() ── outputs to ───────────────┐│   │  │
        │  │   screen.output_surface                       ││   │  │
        │  │                                               ││   │  │
        │  │   ┌───────────────────────────────────────────▼▼─┐ │  │
        │  │   │         Final Composited Surface             │ │  │ 
        │  │   │  ┌────────────────────────────────────────┐  │ │  │ 
        │  │   │  │ All sprites/surfaces merged            │  │ │  │ 
        │  │   │  │ with z-ordering and effects applied    │  │ │  │ 
        │  │   │  └────────────────────────────────────────┘  │ │  │ 
        │  │   └───────────────────┬──────────────────────────┘ │  │ 
        │  │                       │                            │  │
        │  │                       ▼                            │  │
        │  │           screen.output() → .toAnsi()              │  │
        │  │                       │                            │  │
        │  └───────────────────────┼────────────────────────────┘  │
        └────────────────────────────┼─────────────────────────────┘
                                     │ Convert to ANSI half-blocks
                                     ▼
        ┌──────────────────────────────────────────────────────────┐
        │                    TERMINAL OUTPUT                       │
        │  ┌────────────────────────────────────────────────────┐  │
        │  │ ANSI escape sequences:                             │  │
        │  │  • Cursor positioning                              │  │
        │  │  • RGB color codes (foreground/background)         │  │
        │  │  • Half-block characters (▀ ▄) for 2x resolution   │  │
        │  │  • Text overlay from char_map                      │  │
        │  └────────────────────────────────────────────────────┘  │
        └──────────────────────────────────────────────────────────┘


KEY CONCEPTS:
=============

RenderSurface: 2D pixel matrix (color_map, shadow_map, char_map)
                └─> Basic building block for all visuals

RenderEffect:   Transformation applied to a RenderSurface
                └─> Examples: Fade, Blur, Brighter, Darker

RenderEffectChain: Sequence of effects applied in order
                   └─> Input ──> Effect1 ──> Effect2 ──> ... ──> Output

RenderEffectContext: Bundles input + output surface + expansion tracking
                     └─> Enables effects to modify surface size

RenderObject:   input_surface + optional_effect_chain ──> output_surface
                └─> Unit of rendering in pipeline

RenderEngine:   Compositor that merges multiple surfaces
                └─> Handles z-order, blending, transparency

RenderPipeline: Orchestrates multiple RenderObjects
                └─> Process all → Merge → Optional post-process

Screen:         Top-level output canvas
                └─> Converts final surface to ANSI and prints


TYPICAL FLOW:
=============

1. Load sprite from PNG → creates Sprite with SpriteFrameSet
2. Each frame has data_surface (original) and output_surface (for effects)
3. Create RenderObject with sprite's current frame output_surface as input
4. Attach RenderEffectChain to RenderObject (optional)
5. Add RenderObject to RenderPipeline
6. Pipeline.run() → processes all objects → merges via RenderEngine
7. Result written to Screen.output_surface
8. Screen.output() → converts to ANSI → prints to terminal
